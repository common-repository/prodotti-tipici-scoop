<?php/*Plugin Name: Prodotti Tipici ScoopPlugin URI: http://www.prodottitipici.it/prodottitipiciscoop/Description: Racconta la storia della tua azienda e dei tuoi prodotti con ProdottiTipici.it®Version: 1.3Author: ProdottTipici.itAuthor URI: http://www.prodottitipici.it/prodottitipiciscoop/*/defined('ABSPATH') or die('No script kiddies please!');define('PRODOTTI_TIPICI_URL','http://gst.prodottitipici.it/ptscoop/scoopremote.aspx');//definisco le pagine delle opzioni del pluginfunction ptscoop_is_plugin_enabled_req(){    settings_fields('ptscoop_options_group');    $myauthcode = get_option('ptscoop_authorization_code');    $myreturnauth = file_get_contents(PRODOTTI_TIPICI_URL . "?tipo=chiave&uid=" . $myauthcode);    return $myreturnauth;}function ptscoop_is_plugin_enabled(){    $isautenticathed = false;//    $myreturnauth = file_get_contents(PRODOTTI_TIPICI_URL . "?tipo=chiave&uid=" . $myauthcode);    $myreturnauth = ptscoop_is_plugin_enabled_req();    $needle = 'Codice attivazione Valido';    $mypos = strpos($myreturnauth, $needle);    echo $mypos;    if (( $mypos >= 0) && ($mypos != '')) {        $isautenticathed = true;    }    return $isautenticathed;}function ptscoop_activate() {    global $wp_rewrite;    $wp_rewrite->flush_rules();}register_activation_hook( __FILE__, 'ptscoop_activate' );function ptscoop_admin_page(){    if (!current_user_can('manage_options')) {        wp_die(__('Il tuo utente non ha diritti per la modifica delle opzioni.'));    }    // add error/update messages    // check if the user have submitted the settings    // wordpress will add the "settings-updated" $_GET parameter to the url    if (isset($_GET['settings-updated'])) {        // add settings saved message with the class of "updated"        add_settings_error('ptscoop_messages', 'ptscoop_message', __('Modifiche salvate', 'ptscoop'), 'updated');    }    // show error/update messages    settings_errors('ptscoop_messages');    ?>    <h1>Impostazioni di Prodotti tipici Scoop</h1>    <div class="wrap">        <div class="icon32" id="icon-plugin">        </div>        <h2>Configurazione della licenza</h2>        <form method="post" action="options.php">            <?php            settings_fields('ptscoop_options_group');            do_settings_sections('ptscoop_options_group');            $mytestolabelauth = ptscoop_is_plugin_enabled_req();            if (ptscoop_is_plugin_enabled()) {                $mydescauth = '';            } else {                $mydescauth = 'Per ottenere la chiave di attivazione,                        Accedi al pannello di gestione di www.prodottittipici.it<br>                        <a target="_blank" href="http://www.prodottitipici.it/gestione/">Cliccando qui >></a><br>                        Copia ed incolla la chiave e premi "Salva"<br>                        Questa operazione sarà richiesta una sola volta<br>';            }            $mybbccookiecheck = get_option('ptscoop_bbc_cookie');            ?>            <ul>                <li><label for="ptscoop_authorization_code">Chiave di attivazione : </label>                    <input type="text" size="50" id="ptscoop_authorization_code"                           value="<?php echo get_option('ptscoop_authorization_code'); ?>"                           name="ptscoop_authorization_code"/>                </li>                <li>                    <br><span class="description"><strong><?php echo $mytestolabelauth; ?></strong></span>                </li>                <li>                    <p>                        <?php                        echo $mydescauth;                        ?>                    </p>                </li>            </ul>            <p>                <h2>Configurazioni avanzate</h2>            </p>            <ul>                <li>                    <label for=""ptscoop_bbc_cookie">Mostra cookie sul sito :</label>                    <input type="checkbox" id="ptscoop_bbc_cookie" value="1"                             name="ptscoop_bbc_cookie" <?php checked($mybbccookiecheck, true) ?> />                    <span class="description"></span>                </li>            </ul>            <input type="submit" class="button-primary" value="Save"/>            <input type="hidden" name="update_settings" value="Y"/>        </form>    </div>    <?php}function ptscoop_popolarita_page(){    ?>    <h1>Popolarità</h1>    <?php    settings_fields('ptscoop_options_group');    $myauthcode = get_option('ptscoop_authorization_code');    $filename = PRODOTTI_TIPICI_URL . "?tipo=famoso&uid=" . $myauthcode;    echo file_get_contents($filename);}function ptscoop_statistiche_page(){    ?>    <h1>Statistiche</h1>    <?php    settings_fields('ptscoop_options_group');    $myauthcode = get_option('ptscoop_authorization_code');    $filename = PRODOTTI_TIPICI_URL . "?tipo=statistiche&uid=" . $myauthcode;    echo file_get_contents($filename);}function ptscoop_utilita_page(){    ?>    <h1>Utilità</h1>    <?php    settings_fields('ptscoop_options_group');    $myauthcode = get_option('ptscoop_authorization_code');    $filename = PRODOTTI_TIPICI_URL . "?tipo=widget&uid=" . $myauthcode;    echo file_get_contents($filename);}// aggiungo le voci al menù principalefunction ptscoop_add_option_page(){    add_menu_page('Prodotti Tipici Scoop', 'Prodotti Tipici', 'administrator', __FILE__ . '/prodotti-tipici-scoop-admin-page.php', 'ptscoop_admin_page', 'dashicons-welcome-learn-more', 40);    add_submenu_page(__FILE__ . '/prodotti-tipici-scoop-admin-page.php', 'Popolarità', 'Popolarità', 'manage_options', __FILE__ . '/ptscoopp-popolarita.php', 'ptscoop_popolarita_page');    add_submenu_page(__FILE__ . '/prodotti-tipici-scoop-admin-page.php', 'Statistiche', 'Statistiche', 'manage_options', __FILE__ . '/ptscoop-statistiche.php', 'ptscoop_statistiche_page');    add_submenu_page(__FILE__ . '/prodotti-tipici-scoop-admin-page.php', 'Utilità', 'Utilità', 'manage_options', __FILE__ . '/ptscoop-utilita.php', 'ptscoop_utilita_page');}add_action('admin_menu', 'ptscoop_add_option_page');//aggiungo i valori default delle opzionifunction ptscoop_activate_set_default_options(){    add_option('ptscoop_authorization_code', 'Codice di autorizzazione');    add_option('ptscoop_bbc_cookie', '0');}register_activation_hook(__FILE__, 'ptscoop_activate_set_default_options');//registro le opzioni possibili per il pluginfunction ptscoop_register_options_group(){    register_setting('ptscoop_options_group', 'ptscoop_authorization_code');    register_setting('ptscoop_options_group', 'ptscoop_bbc_cookie');}add_action('admin_init', 'ptscoop_register_options_group');/** * Aggiunge il widget alla dashboard. * * Aggangiata alla 'wp_dashboard_setup' action. */function ptscoop_add_dashboard_widgets(){    wp_add_dashboard_widget(        'ptscoop_dashboard_widget',         // Widget slug.        'Prodotti Tipici Scoop Dashboard Widget',         // Title.        'ptscoop_dashboard_widget_function' // Display function.    );}add_action('wp_dashboard_setup', 'ptscoop_add_dashboard_widgets');/** * Funzione per l'output del Dashboard Widget. */function ptscoop_dashboard_widget_function(){    /*    $filename = "http://gst.prodottitipici.it/ptscoop/scoopremote.aspx?tipo=statistiche&uid=9E3A290D-305F-4208-B283-EC4118AB8361";        echo file_get_contents($filename);*/    if (ptscoop_is_plugin_enabled()) {        echo "Prodotti tipici scoop attivo vedi gestione";    } else {        echo "Prodotti tipici scoop richiede attivazione";    }}// ACTIONS//aggiungo bbcpolicy alla fine di ogni aritcolofunction ptscoop_bbcpolicy(){    $url = "" . $_SERVER['HTTP_HOST'];    $mybbccookiecheck = get_option('ptscoop_bbc_cookie');    if ($mybbccookiecheck == 1)        echo '<script type="text/javascript" charset="UTF-8" src="http://dati.prodottitipici.it/' . $url . '/js/file.js"></script>';}add_action('wp_footer', 'ptscoop_bbcpolicy');// SHORTCODES// Facebook shortcodefunction ptscoop_bbcfacebooks($atts, $content = null){    extract(shortcode_atts(array(        "width" => '',        "height" => '',        "url" => '',        "appid" => ''    ), $atts));    return '<iframe src="//www.facebook.com/plugins/likebox.php?href=https://www.facebook.com/' . $url . '&amp;width=' . $width . '&amp;height=' . $height . '&amp;colorscheme=light&amp;show_faces=true&amp;header=true&amp;stream=false&amp;show_border=true&amp;appId=' . $appid . '" scrolling="no" frameborder="0" style="border:none; overflow:hidden; width:' . $width . 'px; height:' . $height . 'px;" allowTransparency="true"></iframe>';}add_shortcode("ptfacebook", "ptscoop_bbcfacebooks");//Google Maps Shortcodefunction ptscoop_bbcgoogleMaps($atts, $content = null){    extract(shortcode_atts(array(        "width" => '',        "height" => '',        "lat" => '',        "lon" => '',        "zoom" => ''    ), $atts));    return '<iframe width="' . $width . '" height="' . $height . '" frameborder="0" scrolling="no" marginheight="0" marginwidth="4" src="http://maps.google.com/maps?q=' . $lat . ',' . $lon . '&amp;num=1&amp;vpsrc=0&amp;ie=UTF8&amp;t=m&amp;ll=' . $lat . ',' . $lon . '&amp;z=' . $zoom . '&amp;output=embed"></iframe><br />';}add_shortcode("ptgooglemap", "ptscoop_bbcgoogleMaps");function ptscoop_ptmostranegozio($atts, $content = null){    extract(shortcode_atts(array(        "username" => ""    ), $atts));    return '<iframe style="border-width: 0;" src="http://store.prodottitipici.it/modextit/' . $username . '/" width="100%" height="1200" frameborder="0" scrolling="no"></iframe>';}add_shortcode("ptmostranegozio", "ptscoop_ptmostranegozio");//CUSTOM ENDPOINT PTSCOOP RRSSFEED//Woocommerce Products rss feedadd_action( 'init', 'ptscoop_RSS_products' );function ptscoop_RSS_products(){    add_feed( 'ptscoop_products', 'ptscoop_RSSFeed_products' );}function ptscoop_RSSFeed_products(){    /**     * Check if WooCommerce is active     **/    if ( in_array( 'woocommerce/woocommerce.php', apply_filters( 'active_plugins', get_option( 'active_plugins' ) ) ) ) {        global $wp;        $myfedd_selflink = home_url(add_query_arg(array(),$wp->request));        $all_products = new WP_Query( array( 'post_type' => array('product', 'product_variation'), 'posts_per_page' => -1, 'post_status' => 'publish' ) );        // Setting up content type and charset headers        header('Content-Type: '.feed_content_type('rss-http').';charset='.get_option('blog_charset'), true);        // Setting up valid XML encoding        echo '<?xml version="1.0" encoding="'.get_option('blog_charset').'"?'.'>' . PHP_EOL;        // <!-- Declaring XML Validators namespaces -->        echo '<rss version="2.0" ';        echo 'xmlns:content="http://purl.org/rss/1.0/modules/content/" ';        echo 'xmlns:wfw="http://wellformedweb.org/CommentAPI/" ';        echo 'xmlns:dc="http://purl.org/dc/elements/1.1/" ';//        echo 'xmlns:atom="http://www.w3.org/2005/Atom" ';        echo 'xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" ';        echo 'xmlns:g="http://base.google.com/ns/1.0" ';        echo 'xmlns:slash="http://purl.org/rss/1.0/modules/slash/" >' . PHP_EOL;        $dateTimeFormat = "D, d M Y H:i:s +0000";        echo '    <channel>' . PHP_EOL;        echo '        <title>' . get_bloginfo('name') . ' - Feed Prodotti</title>' . PHP_EOL;        echo '        <link> ' . get_bloginfo('url') .' </link>' . PHP_EOL;        echo '        <description> ' . get_bloginfo('description') . ' </description>' . PHP_EOL;//        echo '          <atom:link href="' . $myfedd_selflink . '" rel="self" type="application/rss+XML">'. PHP_EOL;        echo '            <lastBuildDate>' . mysql2date($dateTimeFormat, get_lastpostmodified('GMT')) . '</lastBuildDate>'. PHP_EOL;        echo '            <language>' . get_bloginfo("language") . '</language>'. PHP_EOL;        echo '            <sy:updatePeriod>' . apply_filters( 'rss_update_period', 'daily' ) . '</sy:updatePeriod>'. PHP_EOL;        echo '            <sy:updateFrequency>' . apply_filters( 'rss_update_frequency', '1' ) . '</sy:updateFrequency>'. PHP_EOL;        #do_action( 'rss2_head' );        while ( $all_products->have_posts() ) {            $all_products->the_post();            global $woocommerce;            global $product;            $theid = get_the_ID();            $product = wc_get_product($theid);            $myproduct_image = wp_get_attachment_url( get_post_thumbnail_id());            $myproduct_price = $product->get_price();            $myproduct_sku = $product->get_sku();            $myproduct_isinstock = $product->is_in_stock();            $myproduct_author = get_the_author_meta('display_name',$product->post->post_author);            $myproduct_title  = htmlentities(wp_strip_all_tags($product->get_title()));            $myproduct_title  = htmlspecialchars($myproduct_title , ENT_QUOTES | ENT_HTML5);//            $myproduct_title = html_entity_decode(wp_strip_all_tags($product->get_title()));//            $myproduct_title = str_replace('-', ' ', $myproduct_title );            $myproduct_content = wp_strip_all_tags($product->post->post_content);//            $myproduct_category = $product->get_categories();//            $terms = get_terms( 'product_cat', $theid );            $myproduct_category = wp_list_pluck(wp_get_post_terms($theid, 'product_cat'),'name');            $myproduct_weight =  $product->get_weight();            if ($product->is_type( 'variable' )) {                $myproduct_variations = $product->get_available_variations();            } else {                $myproduct_variations = null;            };            if ($myproduct_variations != null){//                todo: gestione variazioni            } else {                if (($myproduct_image)!=false) {                    echo '            <item>' . PHP_EOL;                    echo '                <title>' . $myproduct_title . '</title>' . PHP_EOL;                    echo '                <link>' . get_the_permalink() . '</link>' . PHP_EOL;                    echo '                <pubDate>' . mysql2date($dateTimeFormat, $product->post->post_date) . '</pubDate>' . PHP_EOL;                    echo '                <dc:creator>' . $myproduct_author . ' </dc:creator>' . PHP_EOL;                    echo '                <g:image_link>' . $myproduct_image . '</g:image_link>' . PHP_EOL;                    echo '                <guid isPermaLink="true">' . get_permalink($theid) . '</guid>' . PHP_EOL;                    if (is_null($myproduct_price) || $myproduct_price==''){                        echo '                <g:price>0</g:price>'. PHP_EOL;                    } else {                        echo '                <g:price>' . strip_shortcodes($myproduct_price) . '</g:price>' . PHP_EOL;                    }                    echo '                <g:brand>Generic Brand</g:brand>' . PHP_EOL;                    echo '                <g:google_product_category>Cibo, bevande e tabacco > Alimenti</g:google_product_category>' . PHP_EOL;                    if ($myproduct_category) {                        echo '                <g:product_type>' . $myproduct_category[0] . '</g:product_type>' . PHP_EOL;                    } else {                        echo '                <g:product_type>Generica</g:product_type>' . PHP_EOL;                    }                    if ($myproduct_weight) {                        echo '                <g:shipping_weight>'. $myproduct_weight .'</g:shipping_weight>' . PHP_EOL;                    } else {                        echo '                <g:shipping_weight>0</g:shipping_weight>' . PHP_EOL;                    }                    echo '                <g:condition>Nuovo</g:condition>' . PHP_EOL;                    if (!is_null($myproduct_sku) || $myproduct_sku=='') {                        echo '                <g:mpn>' . $myproduct_sku. '</g:mpn>' . PHP_EOL;                    } else {                        echo '                <g:mpn>' . $theid. '</g:mpn>' . PHP_EOL;                    }                    echo '                <description><![CDATA[' . $myproduct_content . ']]></description>' . PHP_EOL;                    echo '                <g:availability>' . ($myproduct_isinstock ? 'stock' : 'preordine') .'</g:availability>' . PHP_EOL;                    echo '                <g:id>' . $theid . '</g:id>' . PHP_EOL;                    #do_action( 'rss2_item' );                    echo '            </item>' . PHP_EOL;                }            }        }//        echo '          </atom:link>' . PHP_EOL;        echo '        </channel>' . PHP_EOL;        echo '</rss>' . PHP_EOL;        wp_reset_postdata();    }}//Last teen articles rss feedadd_action( 'init', 'ptscoop_RSS' );function ptscoop_RSS() {    add_feed( 'ptscoop', 'ptscoop_RSSFeed' );}function ptscoop_RSSFeed()    {        // Get the last 10 posts        // Returns posts as arrays instead of get_posts' objects        $recent_posts = wp_get_recent_posts(array(            'numberposts' => 10        ));        // Setting up content type and charset headers        header('Content-Type: '.feed_content_type('rss-http').';charset='.get_option('blog_charset'), true);        // Setting up valid XML encoding        echo '<?xml version="1.0" encoding="'.get_option('blog_charset').'"?'.'>' . PHP_EOL;        // <!-- Declaring XML Validators namespaces -->            echo '<rss version="2.0" ';            echo 'xmlns:content="http://purl.org/rss/1.0/modules/content/" ';            echo 'xmlns:wfw="http://wellformedweb.org/CommentAPI/" ';            echo 'xmlns:dc="http://purl.org/dc/elements/1.1/" ';            echo 'xmlns:atom="http://www.w3.org/2005/Atom" ';            echo 'xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" ';            echo 'xmlns:slash="http://purl.org/rss/1.0/modules/slash/" >' . PHP_EOL;            $dateTimeFormat = "D, d M Y H:i:s +0000";            echo '    <channel>' . PHP_EOL;            echo '        <title>' . get_bloginfo('name') . ' - Feed</title>' . PHP_EOL;            echo '        <link>' . get_bloginfo('url') .'</link>' . PHP_EOL;            echo '        <description>' . get_bloginfo('description') . '</description>' . PHP_EOL;            echo '        <lastBuildDate>' . mysql2date($dateTimeFormat, get_lastpostmodified('GMT')) . '</lastBuildDate>' . PHP_EOL;            echo '        <language>' . get_bloginfo("language") . '</language>' . PHP_EOL;            echo '        <sy:updatePeriod>' . apply_filters( 'rss_update_period', 'daily' ) . '</sy:updatePeriod>' . PHP_EOL;            echo '        <sy:updateFrequency>' . apply_filters( 'rss_update_frequency', '1' ) . '</sy:updateFrequency>' . PHP_EOL;//            do_action( 'rss_head' );            foreach($recent_posts as $post) {//                $mysanitized_title = str_replace('&', '', wp_strip_all_tags($post["post_title"]));                $mysanitized_title = htmlentities($post["post_title"]);//                $mysanitized_title = wp_strip_all_tags($post["post_title"]);                $mysanitized_title = htmlspecialchars($mysanitized_title, ENT_QUOTES | ENT_HTML5);//                $mysanitized_title = html_entity_decode($mysanitized_title, 0, 'UTF-8');//                $mysanitized_title = "";                $mysanitized_title = str_replace('-', ' ', $mysanitized_title );                echo '        <item>' . PHP_EOL;                echo '            <title>' . $mysanitized_title . '</title>' . PHP_EOL;                echo '            <link>' . get_permalink($post['ID']) . '</link>' . PHP_EOL;                echo '            <image>' . get_the_post_thumbnail_url($post['ID']) .'</image>' . PHP_EOL;                echo '            <pubDate>' . mysql2date($dateTimeFormat, $post['post_date_gmt']) . '</pubDate>' . PHP_EOL;                echo '            <dc:creator>' . get_the_author_meta('display_name',$post['post_author']). '</dc:creator>' . PHP_EOL;                echo '            <guid isPermaLink="true">' . get_permalink($post["ID"]) . '</guid>' . PHP_EOL;                echo '            <description><![CDATA[' . strip_shortcodes(wp_strip_all_tags($post['post_content'])) . ']]></description>' . PHP_EOL;//                do_action( 'rss_item' );                echo '        </item>' . PHP_EOL;            };            echo '    </channel>' . PHP_EOL;            echo '</rss>' . PHP_EOL;    }?>